<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Multiplayer Methods</title><meta name="Title" content="Methods" /><meta name="Help.Id" content="Methods.T:Alteruna.Multiplayer" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="Methods_T_Alteruna_Multiplayer" /><meta name="tocFile" content="../toc/IDXAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Multiplayer Methods</h1><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDADASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_Multiplayer_Connect.htm">Connect</a></td><td>
            Connect to the Alteruna service manually when the config ConnectOnStart is disabled.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_CreatePrivateRoom.htm">CreatePrivateRoom</a></td><td>
            Create a new private room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_CreateRoom.htm">CreateRoom</a></td><td>
            Create a new room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_DeregisterCodec.htm">DeregisterCodec</a></td><td>
            Deregister a Synchronizable from Alteruna Multiplayer, so that it is no longer being synchronized.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAllSynchronizables.htm">GetAllSynchronizables<span id="LST55B0D0F2_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get a list of all currently registered Synchronizables.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAllSynchronizables_1.htm">GetAllSynchronizables(List<span id="LST55B0D0F2_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>SynchronizableElement<span id="LST55B0D0F2_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Get a list of all currently registered Synchronizables.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatar.htm">GetAvatar<span id="LST55B0D0F2_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get locally spawned Avatar.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatar_1.htm">GetAvatar(String)</a></td><td>
            Get Avatar by name.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatar_2.htm">GetAvatar(UInt16)</a></td><td>
            Get Avatar by index.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatars.htm">GetAvatars</a></td><td>
            Get all Users from current room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetComponentById_1.htm">GetComponentById(Guid)</a></td><td>
            Get a Unity Component through its UID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetComponentById.htm">GetComponentById(IUniqueID)</a></td><td>
            Get a Unity Component through its UID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetDebuggingInfo.htm">GetDebuggingInfo</a></td><td>
            Get debugging info.
            Includes settings, device info, etc.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetGameObjectById_1.htm">GetGameObjectById(Guid)</a></td><td>
            Get a Unity GameObject through its UID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetGameObjectById.htm">GetGameObjectById(IUniqueID)</a></td><td>
            Get a Unity GameObject through its UniqueID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetLastBlockResponse.htm">GetLastBlockResponse</a></td><td>
            Get reason for connection block.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetObjectById__1_1.htm">GetObjectById<span id="LST55B0D0F2_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST55B0D0F2_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(Guid)</a></td><td>
            Get a object inheriting from IAdaptiveSerializableUniqueID through its UID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetObjectById__1.htm">GetObjectById<span id="LST55B0D0F2_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST55B0D0F2_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(IUniqueID)</a></td><td>
            Get a object inheriting from IAdaptiveSerializableUniqueID through its UID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetSynchronizable.htm">GetSynchronizable</a></td><td>
            Get a Synchronizable through its UniqueID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser.htm">GetUser<span id="LST55B0D0F2_8" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get your own User.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser_1.htm">GetUser(Int32)</a></td><td>
            Get User by index.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser_2.htm">GetUser(String)</a></td><td>
            Get User by name.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser_3.htm">GetUser(UInt16)</a></td><td>
            Get User by index.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUsers.htm">GetUsers</a></td><td>
            Get all Users from current room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_InvokeRemoteProcedure.htm">InvokeRemoteProcedure(String, UserId, ProcedureParameters, ISerializable, Reliability, RemoteProcedureReply, RemoteProcedureAck)</a></td><td>
            Invoke a Remote Procedure Call (RPC).
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_InvokeRemoteProcedure_1.htm">InvokeRemoteProcedure(String, UInt16, ProcedureParameters, ISerializable, Reliability, RemoteProcedureReply, RemoteProcedureAck)</a></td><td>
            Invoke a Remote Procedure Call (RPC).
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_IsRegistered_1.htm">IsRegistered(Guid)</a></td><td>
            Check is specified UID registered.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_IsRegistered.htm">IsRegistered(IUniqueID)</a></td><td>
            Check is specified the UniqueID registered.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinFirstAvailable.htm">JoinFirstAvailable</a></td><td>
            Join any available room.
            Only join rooms that is not full, does not have pin code, and is not invite only.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinMatchmaking.htm">JoinMatchmaking<span id="LST55B0D0F2_9" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Join a Room through matchmaking.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinMatchmaking_1.htm">JoinMatchmaking(UInt16)</a></td><td>
            Join a Room through matchmaking using a pin.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinOnDemandRoom.htm">JoinOnDemandRoom<span id="LST55B0D0F2_10" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Create and Join a Room.
            The Room will close when the last player leaves the room.
            Use <span class="code">CreateRoom</span> for more control.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinOnDemandRoom_1.htm">JoinOnDemandRoom(UInt32)</a></td><td>
            Join Room by id.
            The Room will close when the last player leaves the room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinRoom.htm">JoinRoom(Room)</a></td><td>
            Join an available Room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinRoom_1.htm">JoinRoom(Room, UInt16)</a></td><td>
            Join an available Room using a pin.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinWithInviteCode.htm">JoinWithInviteCode</a></td><td>
            Join a room using an invite code.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_LoadScene.htm">LoadScene(Int32, Boolean)</a></td><td>
            Load a scene by index and move Multiplayer object and all Avatars to the new scene.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_LoadScene_1.htm">LoadScene(String, Boolean)</a></td><td>
            Load a scene by name and move Multiplayer object and all Avatars to the new scene.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_LockRoom.htm">LockRoom</a></td><td>
            Lock current room. 
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_MakeUID.htm">MakeUID</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Multiplayer_MulticastRemoteProcedure.htm">MulticastRemoteProcedure</a></td><td>
            Invoke a Remote Procedure Call (RPC) for multiple Users.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_RefreshRoomList.htm">RefreshRoomList</a></td><td>
            Refresh the AvailableRooms list containing the currently available Rooms on the server.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_RegisterRemoteProcedure.htm">RegisterRemoteProcedure</a></td><td>
            Register a Remote Procedure.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_RegisterSynchronizable.htm">RegisterSynchronizable</a></td><td>
            Register a Synchronizable to be synchronized through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_ReplyRemoteProcedure.htm">ReplyRemoteProcedure</a></td><td>
            Reply to a Remote Procedure Called by another User.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket_3.htm">SendToBucket(Guid, Int32)</a></td><td>
            Synchronize a specific UID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket.htm">SendToBucket(CommunicationBridgeUID, Int32, Reliability)</a></td><td>
            Synchronize a specific CommunicationBridgeUID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket_1.htm">SendToBucket(IAdaptiveSerializableUniqueID, Int32, Reliability)</a></td><td>
            Synchronize a specific object implementing IAdaptiveSerializableUniqueID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket_2.htm">SendToBucket(IUniqueID, Int32, Reliability)</a></td><td>
            Synchronize a specific object implementing IUniqueID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Serialize.htm">Serialize</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SetRoomName.htm">SetRoomName</a></td><td>
            Rename currently joined room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SetUsername.htm">SetUsername</a></td><td>
            Sets new username for non-connected user.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SoftReset.htm">SoftReset</a></td><td>
            Reset some internal fields regrading connection to their default values.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SpawnAvatar.htm">SpawnAvatar<span id="LST55B0D0F2_11" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Spawn your avatar.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SpawnAvatar_1.htm">SpawnAvatar(Transform)</a></td><td>
            Spawn Avatar at the position and oration of a transform.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SpawnAvatar_2.htm">SpawnAvatar(Vector3, Quaternion)</a></td><td>
            Spawn Avatar using position and rotation.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SpawnAvatar_3.htm">SpawnAvatar(Vector3, Vector3)</a></td><td>
            Spawn Avatar using position and rotation.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync.htm">Sync(CommunicationBridgeUID, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_4.htm">Sync(Guid, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_2.htm">Sync(IAdaptiveSerializableUniqueID, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_3.htm">Sync(IUniqueID, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_1.htm">Sync(CommunicationBridgeUID, List<span id="LST55B0D0F2_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt16<span id="LST55B0D0F2_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_5.htm">Sync(Guid, List<span id="LST55B0D0F2_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt16<span id="LST55B0D0F2_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_TryGetSynchronizable.htm">TryGetSynchronizable</a></td><td>
            Get a Synchronizable through its UniqueID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_UnlockRoom.htm">UnlockRoom</a></td><td>
            Unlock current room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Unserialize.htm">Unserialize</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="T_Alteruna_Multiplayer.htm">Multiplayer Class</a></div><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>