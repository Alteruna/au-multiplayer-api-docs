<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>InputSynchronizable Class</title><meta name="Title" content="InputSynchronizable" /><meta name="Help.Id" content="T:Alteruna.InputSynchronizable" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="T_Alteruna_InputSynchronizable" /><meta name="Description" content="Synchronize inputs (255 buttons and 255 axis maximum) The input vales will update on this and other clients simultaneously." /><meta name="tocFile" content="../toc/IDAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Input<wbr />Synchronizable Class</h1><div class="summary">
            Synchronize inputs (255 buttons and 255 axis maximum)
            The input vales will update on this and other clients simultaneously.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna.htm">Alteruna</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.3.4+23572bbe79d00cde564b217419b1eba432b8e858<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">InputSynchronizable</span> : <span class="identifier">CommunicationBridge</span>, 
	<span class="identifier">IInput</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Component</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Behaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">MonoBehaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="T_Alteruna_CommunicationBridge.htm">CommunicationBridge</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">InputSynchronizable</span></dd></dl><dl class="implementsList"><dt>Implements</dt><dd><a href="T_Alteruna_IInput.htm">IInput</a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDBCSection"><img src="../images/Alteruna.InputSynchronizable.png" /></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection">
            Sync inputs and move transform based on those inputs.
            Note that this does not sync position, after a while the positions could become unsynced.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using UnityEngine;
using Alteruna;

public class SyncedPlayerMovement : MonoBehaviour
{
    //reference to a InputSynchronizable object in the scene with a avatar.
    public InputSynchronizable InputSync;
    public float Speed = 5;

    private void Start() {
        InputSync.AddAxis(new[] {"Horizontal", "Vertical"});
    }

    private void Update() {
        float scaledSpeed = Speed * Time.deltaTime;
        transform.Translate(
            scaledSpeed * InputSync.AxesValues[0],
            scaledSpeed * InputSync.AxesValues[1],
            0);
    }
 }</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDLFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Alteruna_InputSynchronizable_AxesValues.htm">AxesValues</a></td><td>
            Get synced axes values by index
            </td></tr><tr><td><a href="P_Alteruna_InputSynchronizable_KeyValues.htm">KeyValues</a></td><td>
            Get synced button values by index
            </td></tr><tr><td><a href="P_Alteruna_InputSynchronizable_OnKeyUpdate.htm">OnKeyUpdate</a></td><td>
            Event for changes in key inputs.
            passes <span class="code">KeyCode</span> and state.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDDFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_InputSynchronizable_AddAxis.htm">AddAxis(String)</a></td><td>
            Add a axis to the <span class="code">InputSynchronizable</span></td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_AddAxis_1.htm">AddAxis(<span id="LST74CF2FBA_0" data-languageSpecificText="cpp=array&lt;"></span>String<span id="LST74CF2FBA_1" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Add a array of axes to the <span class="code">InputSynchronizable</span></td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_AddKey.htm">AddKey(KeyCode)</a></td><td>
            Add a key to the <span class="code">InputSynchronizable</span></td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_AddKey_1.htm">AddKey(<span id="LST74CF2FBA_2" data-languageSpecificText="cpp=array&lt;"></span>KeyCode<span id="LST74CF2FBA_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Add a array of keys to the <span class="code">InputSynchronizable</span></td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_Awake.htm">Awake</a></td><td> </td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_GetIndexOfAxis.htm">GetIndexOfAxis</a></td><td>
            Get index of a registered <span class="code">keyCode</span>.
            If the target <span class="code">keyCode</span> dos not exist it returns <span class="code">-1</span></td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_GetIndexOfKey.htm">GetIndexOfKey</a></td><td>
            Get index of a registered <span class="code">keyCode</span>.
            If the target <span class="code">keyCode</span> dos not exist it returns <span class="code">-1</span></td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_Possessed.htm">Possessed</a></td><td><br />(Overrides <a href="M_Alteruna_CommunicationBridge_Possessed.htm">CommunicationBridge<span id="LST74CF2FBA_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Possessed(Boolean, User)</a>)</td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_TryGetIndexOfAxis.htm">TryGetIndexOfAxis</a></td><td>
            Attempts to get index of a registered <span class="code">keyCode</span>.
            If the target <span class="code">keyCode</span> dos not exist, return <span class="code">false</span> and <span class="code">index</span> will be 0
            </td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_TryGetIndexOfKey.htm">TryGetIndexOfKey</a></td><td>
            Attempts to get index of a registered <span class="code">keyCode</span>.
            If the target <span class="code">keyCode</span> dos not exist, return <span class="code">false</span> and <span class="code">index</span> will be 0
            </td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_Unpossessed.htm">Unpossessed</a></td><td><br />(Overrides <a href="M_Alteruna_CommunicationBridge_Unpossessed.htm">CommunicationBridge<span id="LST74CF2FBA_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Unpossessed<span id="LST74CF2FBA_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="M_Alteruna_InputSynchronizable_Update.htm">Update</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAFASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Alteruna_InputSynchronizable_UseLocalInput.htm">UseLocalInput</a></td><td>
            Whether to use local input or use reply as input.
            When false, all clients including the sender will receive inputs simultaneously. (assuming identical connection)
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div><div><a href="T_Alteruna_SyncedKey.htm">SyncedKey</a></div><div><a href="T_Alteruna_SyncedAxis.htm">SyncedAxis</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>