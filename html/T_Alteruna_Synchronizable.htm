<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Synchronizable Class</title><meta name="Title" content="Synchronizable" /><meta name="Help.Id" content="T:Alteruna.Synchronizable" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="T_Alteruna_Synchronizable" /><meta name="Description" content="Class Synchronizable defines a base containing data to be synchronized with other clients in the Room." /><meta name="tocFile" content="../toc/IDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Synchronizable Class</h1><div class="summary">
             Class <span class="code">Synchronizable</span> defines a base containing data to be synchronized with other clients in the Room.
             Synchronizable also support attributes, but unlike <span class="code">AttributesSync</span>, it does not auto commit changes in fields marked with the <span class="code">SynchronizableField</span> attribute.
             </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna.htm">Alteruna</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.3.0<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">Synchronizable</span> : <span class="identifier">CommunicationBridgeUID</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Component</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Behaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">MonoBehaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="T_Alteruna_CommunicationBridge.htm">CommunicationBridge</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="T_Alteruna_CommunicationBridgeUID.htm">CommunicationBridgeUID</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">Synchronizable</span></dd></dl><dl class="inheritanceHierarchy"><dt>Derived</dt><dd><div><a href="T_Alteruna_InterpolationTransformSynchronizable.htm">Alteruna<span id="LSTC84B9144_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InterpolationTransformSynchronizable</a></div><div><a href="T_Alteruna_SynchronizableCommon_RigidbodySynchronizableCommon.htm">Alteruna<span id="LSTC84B9144_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SynchronizableCommon<span id="LSTC84B9144_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>RigidbodySynchronizableCommon</a></div><div><a href="T_Alteruna_TransformSynchronizable.htm">Alteruna<span id="LSTC84B9144_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TransformSynchronizable</a></div><div><a href="T_Alteruna_VoiceSynchronizable.htm">Alteruna<span id="LSTC84B9144_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>VoiceSynchronizable</a></div></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDBCSection">
             Synchronizables are automatically assigned a unique global identifier (UniqueID) when they are first created. This ensures that all application instances can always identify the correct object to synchronize and prevent collisions. You can inspect the assigned UniqueID in the inspector window for all objects that have Synchronizable components attached to them.
             
             Alteruna Multiplayer supports synchronization of virtually any data type or user-defined class as long as they can be serialized as a stream of bytes. Alteruna Multiplayer provides a framework for reading and writing the most common primitive data types in C#. It does support sending a series of bytes which open up for more complex data types to be synchronized as well.
             Here is a detailed example of a Synchronizable.
             <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">public class ExampleSynchronizable : Synchronizable
   {
       // Data to be synchronized with other players in our playroom.
       public float SynchronizedFloat = 3.0f;

       // Used to store the previous version of our data so that we know when it has changed.
       private float _oldSynchronizedFloat;

       public override void DisassembleData(Reader reader, byte LOD)
       {
           // Set our data to the updated value we have recieved from another player.
           SynchronizedFloat = reader.ReadFloat();

           // Save the new data as our old data, otherwise we will immediatly think it changed again.
           _oldSynchronizedFloat = SynchronizedFloat;
       }

       public override void AssembleData(Writer writer, byte LOD)
       {
           // Write our data so that it can be sent to the other players in our playroom.
           writer.Write(SynchronizedFloat);
       }

       private void Update()
       {
           // If the value of our float has changed, sync it with the other players in our playroom.
           if (SynchronizedFloat != _oldSynchronizedFloat)
           {
               // Store the updated value
               _oldSynchronizedFloat = SynchronizedFloat;

               // Tell Alteruna Multiplayer that we want to commit our data.
               Commit();
           }

           // Update the Synchronizable
           base.SyncUpdate();
       }
    }</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDDEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_Synchronizable_AssembleData.htm">AssembleData</a></td><td>
            Called by the <span class="code">SynchronizableManager</span> after Commit() to collect the data to be synced before sending it.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_BroadcastRemoteMethod.htm">BroadcastRemoteMethod(Int32, <span id="LSTC84B9144_5" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC84B9144_6" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Commits method with the <span class="code">SynchronizableMethod</span> attribute on evey client including sender with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_BroadcastRemoteMethod_1.htm">BroadcastRemoteMethod(String, <span id="LSTC84B9144_7" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC84B9144_8" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Commits method with the <span class="code">SynchronizableMethod</span> attribute on evey client including sender with given parameters.
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_Commit.htm">Commit</a></td><td>
            This method informs the <span class="code">SynchronizableManager</span> that this synchronizable has new data that needs to be synced.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_DisassembleData.htm">DisassembleData</a></td><td>
            Called by the <span class="code">SynchronizableManager</span> after recieving new data to be synced with this <span class="code">Synchronizable</span>.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_GetMethodAttributeId.htm">GetMethodAttributeId</a></td><td>
            Get id of method with the <span class="code">SynchronizableMethod</span> attribute by name.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_GetMethodAttributeName.htm">GetMethodAttributeName</a></td><td>
            Get name of method with the <span class="code">SynchronizableMethod</span> attribute by index.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_InvokeRemoteMethod.htm">InvokeRemoteMethod(Int32, <span id="LSTC84B9144_9" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC84B9144_10" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Commits method with the <span class="code">SynchronizableMethod</span> attribute on evey client excluding sender with given parameters.
            
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_InvokeRemoteMethod_1.htm">InvokeRemoteMethod(String, <span id="LSTC84B9144_11" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC84B9144_12" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Commits method with the <span class="code">SynchronizableMethod</span> attribute on evey client excluding sender with given parameters.
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_Reset.htm">Reset</a></td><td><br />(Overrides <a href="M_Alteruna_CommunicationBridgeUID_Reset.htm">CommunicationBridgeUID<span id="LSTC84B9144_13" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Reset<span id="LSTC84B9144_14" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="M_Alteruna_Synchronizable_Serialize.htm">Serialize</a></td><td>
            Serialize Synchronizable.
            <br />(Overrides <a href="M_Alteruna_CommunicationBridgeUID_Serialize.htm">CommunicationBridgeUID<span id="LSTC84B9144_15" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Serialize(ITransportStreamWriter, Byte, Boolean)</a>)</td></tr><tr><td><a href="M_Alteruna_Synchronizable_SyncUpdate.htm">SyncUpdate</a></td><td>
            Update the internals of the <span class="code">Synchronizable</span>.
            </td></tr><tr><td><a href="M_Alteruna_Synchronizable_Unserialize.htm">Unserialize</a></td><td>
            Unserialize Synchronizable.
            <br />(Overrides <a href="M_Alteruna_CommunicationBridgeUID_Unserialize.htm">CommunicationBridgeUID<span id="LSTC84B9144_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Unserialize(ITransportStreamReader, Byte, UInt32)</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Alteruna_Synchronizable_BucketBehaviors.htm">BucketBehaviors</a></td><td>
            A list of Bucket Behaviors describing how this Synchronizable is syncrhonized depending on which Bucket it is being sent to.
            </td></tr><tr><td><a href="F_Alteruna_Synchronizable_MAX_LOD.htm">MAX_LOD</a></td><td>
            The highest NetLOD value a Synchronizable can have.
            </td></tr><tr><td><a href="F_Alteruna_Synchronizable_Reliability.htm">Reliability</a></td><td>
            Reliability of the Synchronizable.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div><div><a href="T_Alteruna_AttributesSync.htm">AttributesSync</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2022 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>