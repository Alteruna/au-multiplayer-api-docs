<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Multiplayer Class</title><meta name="Title" content="Multiplayer" /><meta name="Help.Id" content="T:Alteruna.Multiplayer" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="T_Alteruna_Multiplayer" /><meta name="Description" content="The component Multiplayer gives access to all functionality and communication for Alteruna Multiplayer." /><meta name="tocFile" content="../toc/IDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Multiplayer Class</h1><div class="summary">
            The component <span class="code">Multiplayer</span> gives access to all functionality and communication for Alteruna Multiplayer.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna.htm">Alteruna</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.2.3<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Multiplayer</span> : <span class="identifier">MonoBehaviour</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Component</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Behaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">MonoBehaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">Multiplayer</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="ID0XB0EASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Alteruna_Multiplayer_AvailableRooms.htm">AvailableRooms</a></td><td>
            A list of all the currently available Rooms on the server.
            </td></tr><tr><td><a href="P_Alteruna_Multiplayer_CurrentRoom.htm">CurrentRoom</a></td><td>
            The Room we are currently connected to.
            </td></tr><tr><td><a href="P_Alteruna_Multiplayer_InRoom.htm">InRoom</a></td><td>
            Whether currently connected to a Room.
            </td></tr><tr><td><a href="P_Alteruna_Multiplayer_Instance.htm">Instance</a></td><td>
            Static singleton instance of the <span class="code">Multiplayer</span> component.
            Note that this feature may not work as intended when used in combination with the multi-client tool.
            </td></tr><tr><td><a href="P_Alteruna_Multiplayer_IsConnected.htm">IsConnected</a></td><td>
            Whether currently connected to a server.
            </td></tr><tr><td><a href="P_Alteruna_Multiplayer_LowestUserIndex.htm">LowestUserIndex</a></td><td>
            The index of the user with the lowest index.
            Updates after the other joined and room joined events.
            </td></tr><tr><td><a href="P_Alteruna_Multiplayer_Me.htm">Me</a></td><td>
            The User representing the local player.
            </td></tr><tr><td><a href="P_Alteruna_Multiplayer_NetworkStatistics.htm">NetworkStatistics</a></td><td>
            Statistic on network data send and received in Kilobytes unless defined.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDZEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_Multiplayer_Connect.htm">Connect</a></td><td>
            Connect to the Alteruna service manually when the config ConnectOnStart is disabled.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_CreateRoom.htm">CreateRoom</a></td><td>
            Create a new room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_DeregisterCodec.htm">DeregisterCodec</a></td><td>
            Deregister a Synchronizable from Alteruna Multiplayer, so that it is no longer being synchronized.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAllSynchronizables.htm">GetAllSynchronizables<span id="LST4D9482F5_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get a list of all currently registered Synchronizables.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAllSynchronizables_1.htm">GetAllSynchronizables(List<span id="LST4D9482F5_1" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>SynchronizableElement<span id="LST4D9482F5_2" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a></td><td>
            Get a list of all currently registered Synchronizables.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatar.htm">GetAvatar<span id="LST4D9482F5_3" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get locally spawned Avatar.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatar_1.htm">GetAvatar(String)</a></td><td>
            Get Avatar by name.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatar_2.htm">GetAvatar(UInt16)</a></td><td>
            Get Avatar by index.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetAvatars.htm">GetAvatars</a></td><td>
            Get all Users from current room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetGameObjectById_1.htm">GetGameObjectById(Guid)</a></td><td>
            Get a Unity GameObject through its UID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetGameObjectById.htm">GetGameObjectById(IUniqueID)</a></td><td>
            Get a Unity GameObject through its UniqueID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetLastBlockResponse.htm">GetLastBlockResponse</a></td><td>
            Get reason for connection block.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetSynchronizable.htm">GetSynchronizable</a></td><td>
            Get a Synchronizable through its UniqueID.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser.htm">GetUser<span id="LST4D9482F5_4" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Get your own User.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser_1.htm">GetUser(Int32)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser_2.htm">GetUser(String)</a></td><td>
            Get User by name.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUser_3.htm">GetUser(UInt16)</a></td><td>
            Get User by index.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_GetUsers.htm">GetUsers</a></td><td>
            Get all Users from current room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_HasSynchroniable.htm">HasSynchroniable</a></td><td>
            Whether Alteruna Multiplayer currently has a Synchronizable with the specified UniqueID registered.
            <br /><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_Alteruna_Multiplayer_InvokeRemoteProcedure.htm">InvokeRemoteProcedure(String, UserId, ProcedureParameters, ISerializable, Reliability, RemoteProcedureReply, RemoteProcedureAck)</a></td><td>
            Invoke a Remote Procedure Call (RPC).
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_InvokeRemoteProcedure_1.htm">InvokeRemoteProcedure(String, UInt16, ProcedureParameters, ISerializable, Reliability, RemoteProcedureReply, RemoteProcedureAck)</a></td><td>
            Invoke a Remote Procedure Call (RPC).
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_IsRegistered_1.htm">IsRegistered(Guid)</a></td><td>
            Check is specified UID registered.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_IsRegistered.htm">IsRegistered(IUniqueID)</a></td><td>
            Check is specified the UniqueID registered.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinFirstAvailable.htm">JoinFirstAvailable</a></td><td>
            Join any available room.
            Only join rooms that is not full, does not have pin code, and is not invite only.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinMatchmaking.htm">JoinMatchmaking<span id="LST4D9482F5_5" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Join a Room through matchmaking.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinMatchmaking_1.htm">JoinMatchmaking(UInt16)</a></td><td>
            Join a Room through matchmaking using a pin.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinOnDemandRoom.htm">JoinOnDemandRoom<span id="LST4D9482F5_6" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Create and Join a Room.
            The Room will close when the last player leaves the room.
            Use <span class="code">CreateRoom</span> for more control.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinOnDemandRoom_1.htm">JoinOnDemandRoom(UInt32)</a></td><td>
            Join Room by id.
            The Room will close when the last player leaves the room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinRoom.htm">JoinRoom(Room)</a></td><td>
            Join an available Room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_JoinRoom_1.htm">JoinRoom(Room, UInt16)</a></td><td>
            Join an available Room using a pin.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_LockRoom.htm">LockRoom</a></td><td>
            Lock current room. 
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_MulticastRemoteProcedure.htm">MulticastRemoteProcedure</a></td><td>
            Invoke a Remote Procedure Call (RPC) for multiple Users.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_RefreshRoomList.htm">RefreshRoomList</a></td><td>
            Refresh the AvailableRooms list containing the currently available Rooms on the server.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_RegisterRemoteProcedure.htm">RegisterRemoteProcedure</a></td><td>
            Register a Remote Procedure.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_RegisterSynchronizable.htm">RegisterSynchronizable</a></td><td>
            Register a Synchronizable to be synchronized through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_ReplyRemoteProcedure.htm">ReplyRemoteProcedure</a></td><td>
            Reply to a Remote Procedure Called by another User.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket.htm">SendToBucket(CommunicationBridgeUID, Int32)</a></td><td>
            Synchronize a specific CommunicationBridgeUID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket_3.htm">SendToBucket(Guid, Int32)</a></td><td>
            Synchronize a specific UID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket_1.htm">SendToBucket(IAdaptiveSerializableUniqueID, Int32)</a></td><td>
            Synchronize a specific object implementing IAdaptiveSerializableUniqueID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SendToBucket_2.htm">SendToBucket(IUniqueID, Int32)</a></td><td>
            Synchronize a specific object implementing IUniqueID to all Users within a specific bucket.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SetUsername.htm">SetUsername</a></td><td>
            Sets new username if the user is not in a room.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SoftReset.htm">SoftReset</a></td><td>
            Reset some internal fields regrading connection to their default values.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_SpawnAvatar.htm">SpawnAvatar</a></td><td>
            Spawn your avatar.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync.htm">Sync(CommunicationBridgeUID, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_3.htm">Sync(Guid, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_1.htm">Sync(IAdaptiveSerializableUniqueID, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_2.htm">Sync(IUniqueID, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_Sync_4.htm">Sync(Guid, List<span id="LST4D9482F5_7" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt16<span id="LST4D9482F5_8" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, Reliability)</a></td><td>
            Synchronize a specific Synchronizable through Alteruna Multiplayer.
            </td></tr><tr><td><a href="M_Alteruna_Multiplayer_UnlockRoom.htm">UnlockRoom</a></td><td>
            Unlock current room.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Alteruna_Multiplayer_AvatarPrefab.htm">AvatarPrefab</a></td><td>
            The prefab to spawn as an Avatar if SpawnAvatarOnJoin is true.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_AvatarSpawning.htm">AvatarSpawning</a></td><td>
            Avatar spawning behavior.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_AvatarSpawnLocation.htm">AvatarSpawnLocation</a></td><td>
            The location at which to spawn Avatars.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_AvatarSpawnLocations.htm">AvatarSpawnLocations</a></td><td>
            An indexed list of the locations at which to spawn Avatars.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_Buckets.htm">Buckets</a></td><td>
            A list containing all of the existing Buckets in the application.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_Connected.htm">Connected</a></td><td>
            Event invoked after successfully connecting to a server.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_Disconnected.htm">Disconnected</a></td><td>
            Event invoked after disconnecting from a server.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_ForceSynced.htm">ForceSynced</a></td><td>
            Forced synced event.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_JoinRejected.htm">JoinRejected</a></td><td>
            Event invoked on join event rejected with a rejection reason.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_LockAquired.htm">LockAquired</a></td><td>
            Event invoked when successfully receives ownership for any object.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_LockDenied.htm">LockDenied</a></td><td>
            Event invoked when an attempt to gain ownership over a object is denied.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_LockRequested.htm">LockRequested</a></td><td>
            Event invoked on ownership requests.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_LockUnlocked.htm">LockUnlocked</a></td><td>
            Event invoked when a object releases its ownership.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_LogLevel.htm">LogLevel</a></td><td>
            The lowest level of logs to print to the console.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_MaxPlayers.htm">MaxPlayers</a></td><td>
            The maximum amount of players allowed in a single Room.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_NetworkError.htm">NetworkError</a></td><td>
            Event invoked if any network related errors occur.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_NetworkPrefs.htm">NetworkPrefs</a></td><td>
            Similar to Unity's PlayerPrefs, but stores data in the cloud.
            It is recommended to use its asynchronous methods.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_OtherUserJoined.htm">OtherUserJoined</a></td><td>
            Event invoked when other User joined the Room.
            When joining a room, this event will be invoked for every User already in the Room.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_OtherUserLeft.htm">OtherUserLeft</a></td><td>
            Event invoked after another User left the Room.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_PacketReceived.htm">PacketReceived</a></td><td>
            Receive packet event.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_PacketSent.htm">PacketSent</a></td><td>
            Send packet event.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_RoomJoined.htm">RoomJoined</a></td><td>
            Event invoked after successfully joining a Room.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_RoomLeft.htm">RoomLeft</a></td><td>
            Event invoked on successfully leaving a room.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_RoomListUpdated.htm">RoomListUpdated</a></td><td>
            Event invoked when the AvailableRooms list is modified.
            </td></tr><tr><td><a href="F_Alteruna_Multiplayer_SpawnAvatarPerIndex.htm">SpawnAvatarPerIndex</a></td><td>
            Weather Avatars should be spawned in different locations based on their index in the Room.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2022 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>