<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Alteruna Namespace</title><meta name="Title" content="Alteruna" /><meta name="Help.Id" content="N:Alteruna" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="N_Alteruna" /><meta name="Description" content="Primary namespace for Alteruna Multiplayer" /><meta name="tocFile" content="../toc/IDA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Alteruna Namespace</h1><div class="summary">Primary namespace for Alteruna Multiplayer</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Classes</h2><div id="IDACASection"><table id="classList" class="table is-hoverable"><tr><td><a href="T_Alteruna_AnimationSynchronizable.htm">AnimationSynchronizable</a></td><td>
            Synchronizable Animator component.
            </td></tr><tr><td><a href="T_Alteruna_AttributesSync.htm">AttributesSync</a></td><td>
             Synchronize methods and fields using attributes.
             </td></tr><tr><td><a href="T_Alteruna_AttributesSync_SynchronizableField.htm">AttributesSync<span id="LST8356557C_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SynchronizableField</a></td><td>
            Synchronise target field.
            </td></tr><tr><td><a href="T_Alteruna_AttributesSync_SynchronizableMethod.htm">AttributesSync<span id="LST8356557C_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SynchronizableMethod</a></td><td>
            Synchronise target Method.
            </td></tr><tr><td><a href="T_Alteruna_Avatar.htm">Avatar</a></td><td><span class="code">Avatar</span> is used to represent a player in a Room.
             </td></tr><tr><td><a href="T_Alteruna_Bucket.htm">Bucket</a></td><td>
            Class <span class="code">Bucket</span> is a collection of players used to define NetLOD behaviour.
            </td></tr><tr><td><a href="T_Alteruna_CommunicationBridge.htm">CommunicationBridge</a></td><td>
            Holds references and methods for communications with active <span class="code">Multiplayer</span> component.
            Unlike <span class="code">CommunicationBridgeUID</span>, this component does not have a unique identifier (UID).
            </td></tr><tr><td><a href="T_Alteruna_CommunicationBridgeUID.htm">CommunicationBridgeUID</a></td><td>
            Holds references and methods for communications with active <span class="code">Multiplayer</span> and <span class="code">UID</span> components.
            Can be used to as object reference when sending packages to other clients.
            </td></tr><tr><td><a href="T_Alteruna_EnableSynchronizable.htm">EnableSynchronizable</a></td><td>
            A component for synchronizing the enabling or disabling of a GameObject across multiple clients in a multiplayer environment.
            </td></tr><tr><td><a href="T_Alteruna_Encryption.htm">Encryption</a></td><td> </td></tr><tr><td><a href="T_Alteruna_Endpoint.htm">Endpoint</a></td><td>
            Device endpoint.
            </td></tr><tr><td><a href="T_Alteruna_InputSynchronizable.htm">InputSynchronizable</a></td><td>
            Synchronize inputs (255 buttons and 255 axis maximum)
            The input vales will update on this and other clients simultaneously.
            </td></tr><tr><td><a href="T_Alteruna_InterpolationTransformSynchronizable.htm">InterpolationTransformSynchronizable</a></td><td> </td></tr><tr><td><a href="T_Alteruna_Multiplayer.htm">Multiplayer</a></td><td>
            The component <span class="code">Multiplayer</span> gives access to all functionality and communication for Alteruna Multiplayer.
            </td></tr><tr><td><a href="T_Alteruna_NameGenerator.htm">NameGenerator</a></td><td>
            Class <span class="code">NameGenerator</span> generates names from a random animal and adjective.
            </td></tr><tr><td><a href="T_Alteruna_ProcedureParameters.htm">ProcedureParameters</a></td><td>
            Parameters containing data to be sent together with Remote Procedure Calls.
            </td></tr><tr><td><a href="T_Alteruna_Reader.htm">Reader</a></td><td>
            Class <span class="code">Writer</span> is used to write data to be sent to other Users through a <span class="code">Synchronizable</span>.
            </td></tr><tr><td><a href="T_Alteruna_Rigidbody2DSynchronizable.htm">Rigidbody2DSynchronizable</a></td><td><span class="code">Rigidbody2DSynchronizable</span> is a <span class="code">Synchronizable</span> that synchronizes the state of a <span class="code">Rigidbody2D</span> component.
            </td></tr><tr><td><a href="T_Alteruna_RigidbodySynchronizable.htm">RigidbodySynchronizable</a></td><td>
            Control and synchronizes an object's position through physics simulation.
            </td></tr><tr><td><a href="T_Alteruna_RigidbodySynchronizableCommon.htm">RigidbodySynchronizableCommon</a></td><td>
            Common Rigidbody synchronizable methods and.
            </td></tr><tr><td><a href="T_Alteruna_Room.htm">Room</a></td><td>
            The <span class="code">Room</span> class defines a room in the network.
            Users can join and leave rooms and send data to all other users in the same room.
            </td></tr><tr><td><a href="T_Alteruna_Service.htm">Service</a></td><td>
            Alteruna service class.
            </td></tr><tr><td><a href="T_Alteruna_ServiceState.htm">ServiceState</a></td><td>
            Handle states and events for alternate service.
            </td></tr><tr><td><a href="T_Alteruna_Spawner.htm">Spawner</a></td><td>
            Class <span class="code">Spawner</span> defines a component which can instantiate and destroy objects on all clients in the Room simultaneously.
            </td></tr><tr><td><a href="T_Alteruna_SpawnPointer.htm">SpawnPointer</a></td><td>
            Sets Multiplayer's spawn points on enabled, scene is loaded with <span class="code">Multiplayer.LoadScene</span>, or <span class="code">SetAsSpawnPoint</span> is called.
            </td></tr><tr><td><a href="T_Alteruna_SyncedAxis.htm">SyncedAxis</a></td><td>
             Alternative way of implementing <span class="code">InputSynchronizable</span>.
             </td></tr><tr><td><a href="T_Alteruna_SyncedEventBase_1.htm">SyncedEventBase<span id="LST8356557C_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST8356557C_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Base class for syncronizing events with any type of argument.
            </td></tr><tr><td><a href="T_Alteruna_SyncedKey.htm">SyncedKey</a></td><td>
            Alternative way of implementing <span class="code">InputSynchronizable</span>.
            </td></tr><tr><td><a href="T_Alteruna_Synchronizable.htm">Synchronizable</a></td><td>
             Class <span class="code">Synchronizable</span> defines a base containing data to be synchronized with other clients in the Room.
             Synchronizable also support attributes, but unlike <span class="code">AttributesSync</span>, it does not auto commit changes in fields marked with the <span class="code">SynchronizableField</span> attribute.
             </td></tr><tr><td><a href="T_Alteruna_Synchronizable_SynchronizableField.htm">Synchronizable<span id="LST8356557C_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SynchronizableField</a></td><td>
            Synchronise target field.
            </td></tr><tr><td><a href="T_Alteruna_Synchronizable_SynchronizableMethod.htm">Synchronizable<span id="LST8356557C_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SynchronizableMethod</a></td><td>
            Synchronise target Method.
            </td></tr><tr><td><a href="T_Alteruna_TransformSynchronizable.htm">TransformSynchronizable</a></td><td>
            Class <span class="code">TransformSynchronizable</span> defines a component which synchronizes its game objects transform with other clients in the Playroom.
            </td></tr><tr><td><a href="T_Alteruna_TransformSynchronizable2D.htm">TransformSynchronizable2D</a></td><td>
            Class <span class="code">TransformSynchronizable2D</span> defines a component which synchronizes its game objects transform with other clients in the Playroom.
            </td></tr><tr><td><a href="T_Alteruna_TransformSynchronizableCommon.htm">TransformSynchronizableCommon</a></td><td>
            Common Transform Synchronizable methods.
            </td></tr><tr><td><a href="T_Alteruna_UniqueAvatarChild.htm">UniqueAvatarChild</a></td><td>
            Instantiate a prefab as a child from a array.
            If avatar index goes beyond the length of the array, it will loop.
            </td></tr><tr><td><a href="T_Alteruna_UniqueAvatarColor.htm">UniqueAvatarColor</a></td><td>
            Change Hue to a unique color based on avatar index.
            </td></tr><tr><td><a href="T_Alteruna_UnityLog.htm">UnityLog</a></td><td>
            Class <span class="code">UnityLog</span> is responsible for logging internal messages and events. 
            </td></tr><tr><td><a href="T_Alteruna_UnityReader.htm">UnityReader</a></td><td>
            Class <span class="code">UnityReader</span> is used to write Unity types to a <span class="code">Reader</span>.
            </td></tr><tr><td><a href="T_Alteruna_UnityWebRequestExtension.htm">UnityWebRequestExtension</a></td><td> </td></tr><tr><td><a href="T_Alteruna_UnityWriter.htm">UnityWriter</a></td><td>
            Class <span class="code">UnityWriter</span> is used to write Unity types to a <span class="code">Writer</span>.
            </td></tr><tr><td><a href="T_Alteruna_User.htm">User</a></td><td>
            User class containing index and name.
            </td></tr><tr><td><a href="T_Alteruna_UtcTime.htm">UtcTime</a></td><td>
            Useful time related fields using global time.
            Note that its its common for the system time to be inaccurate, expect a difference by 5 seconds.
            If the machine time is not automatically updated, it can be up to much more.
            </td></tr><tr><td><a href="T_Alteruna_VoiceSynchronizable.htm">VoiceSynchronizable</a></td><td> </td></tr><tr><td><a href="T_Alteruna_Writer.htm">Writer</a></td><td>
            Class <span class="code">Reader</span> is used to read data recieved from another User.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Structures</h2><div id="ID0CB0CASection"><table id="structureList" class="table is-hoverable"><tr><td><a href="T_Alteruna_BucketBehavior.htm">BucketBehavior</a></td><td>
            Behavior of a LOD bucket.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Interfaces</h2><div id="IDCCASection"><table id="interfaceList" class="table is-hoverable"><tr><td><a href="T_Alteruna_IAdaptiveSerializableUniqueID.htm">IAdaptiveSerializableUniqueID</a></td><td>
            Combines the IAdaptiveSerializable and the IUniqueID interface.
            </td></tr><tr><td><a href="T_Alteruna_IInput.htm">IInput</a></td><td>
            Alteruna Input interface.
            Can be used to create a custom synced input system.
            </td></tr><tr><td><a href="T_Alteruna_IServiceListener.htm">IServiceListener</a></td><td>
            Service event listener interface.
            </td></tr><tr><td><a href="T_Alteruna_IServiceStateListener.htm">IServiceStateListener</a></td><td>
            Service state event listener interface.
            </td></tr><tr><td><a href="T_Alteruna_IUniqueID.htm">IUniqueID</a></td><td>
            Class <span class="code">UniqueID</span> defines an application-wide unique ID for identifying objects deciding where to rout data in a Room.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Delegates</h2><div id="IDKCASection"><table id="delegateList" class="table is-hoverable"><tr><td><a href="T_Alteruna_RemoteProcedure.htm">RemoteProcedure</a></td><td>
            RPC delegate.
            </td></tr><tr><td><a href="T_Alteruna_RemoteProcedureAck.htm">RemoteProcedureAck</a></td><td>
            RPC ack delegate.
            </td></tr><tr><td><a href="T_Alteruna_RemoteProcedureReply.htm">RemoteProcedureReply</a></td><td>
            RPC reply delegate.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Enumerations</h2><div id="IDECASection"><table id="enumerationList" class="table is-hoverable"><tr><td><a href="T_Alteruna_AttributesSync_LocalBehavior.htm">AttributesSync<span id="LST8356557C_6" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>LocalBehavior</a></td><td>
            Behaviour of local invocation of remote methods.
            </td></tr><tr><td><a href="T_Alteruna_AvatarBehavior.htm">AvatarBehavior</a></td><td>
            Behavior for avatar spawning.
            </td></tr><tr><td><a href="T_Alteruna_InterpolationTransformSynchronizable_InterpolationMethodType.htm">InterpolationTransformSynchronizable<span id="LST8356557C_7" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InterpolationMethodType</a></td><td> </td></tr><tr><td><a href="T_Alteruna_InterpolationTransformSynchronizable_LocalBehaviourType.htm">InterpolationTransformSynchronizable<span id="LST8356557C_8" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>LocalBehaviourType</a></td><td> </td></tr><tr><td><a href="T_Alteruna_SyncedKey_KeyMode.htm">SyncedKey<span id="LST8356557C_9" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>KeyMode</a></td><td>
            Key behavior mode
            </td></tr><tr><td><a href="T_Alteruna_TransformSynchronizableCommon_Transform2DAxes.htm">TransformSynchronizableCommon<span id="LST8356557C_10" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Transform2DAxes</a></td><td>
            Flags for setting what axis to sync.
            </td></tr><tr><td><a href="T_Alteruna_TransformSynchronizableCommon_TransformSyncConstraint.htm">TransformSynchronizableCommon<span id="LST8356557C_11" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TransformSyncConstraint</a></td><td>
            Flags for setting what axis to sync.
            </td></tr><tr><td><a href="T_Alteruna_UserId.htm">UserId</a></td><td>
            User Indexes to target multiple users.
            </td></tr><tr><td><a href="T_Alteruna_VoiceSynchronizable_BitDepth.htm">VoiceSynchronizable<span id="LST8356557C_12" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>BitDepth</a></td><td> </td></tr><tr><td><a href="T_Alteruna_VoiceSynchronizable_EncryptionType.htm">VoiceSynchronizable<span id="LST8356557C_13" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EncryptionType</a></td><td> </td></tr></table></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Classes</a></li><li><a class="quickLink">Structures</a></li><li><a class="quickLink">Interfaces</a></li><li><a class="quickLink">Delegates</a></li><li><a class="quickLink">Enumerations</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script></body></html>