<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>AttributesSync Class</title><meta name="Title" content="AttributesSync" /><meta name="Help.Id" content="T:Alteruna.AttributesSync" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="T_Alteruna_AttributesSync" /><meta name="Description" content="Synchronize methods and fields using attributes." /><meta name="tocFile" content="../toc/IDAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Attributes<wbr />Sync Class</h1><div class="summary">
             Synchronize methods and fields using attributes.
             </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna.htm">Alteruna</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.3.4<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">AttributesSync</span> : <span class="identifier">CommunicationBridgeUID</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_self" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Component</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Behaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">MonoBehaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="T_Alteruna_CommunicationBridge.htm">CommunicationBridge</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="T_Alteruna_CommunicationBridgeUID.htm">CommunicationBridgeUID</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">AttributesSync</span></dd></dl><dl class="inheritanceHierarchy"><dt>Derived</dt><dd><div><a href="T_Alteruna_AnimationSynchronizable.htm">Alteruna<span id="LSTC0AA725C_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AnimationSynchronizable</a></div><div><a href="T_Alteruna_EnableSynchronizable.htm">Alteruna<span id="LSTC0AA725C_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>EnableSynchronizable</a></div></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDBCSection">
            	Here is how you can easily synchronize a field using attributes.
             There is a small performance overhead on using attributes instead of writing your own synchronizable.
             
            	<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">public class MyAttributesSyncClass : AttributesSync
{
       [SynchronizableField]
       public string MyString;
}</code></pre></div></div>
            
             Unlike SynchronizableField, SynchronizableMethod have almost no overhead.
             They can be invoked in several ways.
            
             Parameters are easy to add, simply add them after the invocation method.
             Similar to how they are added in normal invocation.
            
             <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">public class MessageAll : AttributesSync
{
    public void SendRpc()
    {
        // Invoke method by name. alternatively, we can call by index.
        BroadcastRemoteMethod(nameof(Message), "Hello, world!");
    }

    // the SynchronizableMethod attribute marks methods available for remote invocation.
    [SynchronizableMethod]
    private void Message(string msg)
    {
        Debug.Log(msg);
    }
}</code></pre></div></div>
            
             Note that only serializable objects can be passed as argument.
            
            	Here is a simple example for syncing audio play using <span class="code">BroadcastRemoteMethod</span>.
             
             <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">public class PlayAudioSync : AttributesSync
{
    // reference to AudioSource.
    public AudioSource AudioSource;

    // public method that we call in event or from external scripts
    public void Play()
    {
        // Invoke method with index 0 on all clients including sender.
        BroadcastRemoteMethod();
    }

    // We define our synced method here.
    // As we only define one we know this one have index 0.
    [SynchronizableMethod]
    private void PlayRemote()
    {
        AudioSource.Play();
    }
}</code></pre></div></div>
            
            	Using InvokeRemoteMethod, we can invoke RPC on one or more targets.
             The following example shows how we can send private messages to specified user(s).
            
             <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">public class Message : AttributesSync
{
    // id is index of user
    public void SendMessageToUser(ushort id, string message)
    {
        // Invoke method by index.
        InvokeRemoteMethod(0, id, message);
    }

    public void SendMessageToUser(ushort[] ids, string message)
    {
        // Invoke method by index.
        InvokeRemoteMethod(0, ids, message);
    }

    // Because this is the first method defined, we know its index is 0. The next one would have index of 1.
    [SynchronizableMethod]
    private void Message(string msg)
    {
        Debug.Log(msg);
    }
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDDEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_AttributesSync_BroadcastRemoteMethod.htm">BroadcastRemoteMethod(Int32, <span id="LSTC0AA725C_2" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_3" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Calls method with the <span class="code">SynchronizableMethod</span> attribute on evey client including sender with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_BroadcastRemoteMethod_1.htm">BroadcastRemoteMethod(String, <span id="LSTC0AA725C_4" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Calls method with the <span class="code">SynchronizableMethod</span> attribute on evey client including sender with given parameters.
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_Commit.htm">Commit</a></td><td>
            Send all changes to all users.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_ForceSync.htm">ForceSync</a></td><td>
            Force all fields to be synced as if they where changed.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_GetMethodAttributeId.htm">GetMethodAttributeId</a></td><td>
            Get index of method with the <span class="code">SynchronizableMethod</span> attribute by name.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_GetMethodAttributeName.htm">GetMethodAttributeName</a></td><td>
            Get name of method with the <span class="code">SynchronizableMethod</span> attribute by index.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_InvokeRemoteMethod.htm">InvokeRemoteMethod(Int32, UserId, <span id="LSTC0AA725C_6" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Invoke a method with the <span class="code">SynchronizableMethod</span> attribute on target user
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_InvokeRemoteMethod_1.htm">InvokeRemoteMethod(Int32, List<span id="LSTC0AA725C_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt16<span id="LSTC0AA725C_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LSTC0AA725C_10" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_11" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Invoke a method with the <span class="code">SynchronizableMethod</span> attribute on target users
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_InvokeRemoteMethod_2.htm">InvokeRemoteMethod(Int32, UInt16, <span id="LSTC0AA725C_12" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_13" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Invoke a method with the <span class="code">SynchronizableMethod</span> attribute on target user
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_InvokeRemoteMethod_3.htm">InvokeRemoteMethod(String, UserId, <span id="LSTC0AA725C_14" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_15" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Invoke a method with the <span class="code">SynchronizableMethod</span> attribute on target user
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_InvokeRemoteMethod_4.htm">InvokeRemoteMethod(String, List<span id="LSTC0AA725C_16" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>UInt16<span id="LSTC0AA725C_17" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, <span id="LSTC0AA725C_18" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_19" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Invoke a method with the <span class="code">SynchronizableMethod</span> attribute on target users
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_InvokeRemoteMethod_5.htm">InvokeRemoteMethod(String, UInt16, <span id="LSTC0AA725C_20" data-languageSpecificText="cpp=array&lt;"></span>Object<span id="LSTC0AA725C_21" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td>
            Invoke a method with the <span class="code">SynchronizableMethod</span> attribute on target user
            with given parameters.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_LateUpdate.htm">LateUpdate</a></td><td>
            Handle changes fields.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_Register.htm">Register</a></td><td><br />(Overrides <a href="M_Alteruna_CommunicationBridgeUID_Register.htm">CommunicationBridgeUID<span id="LSTC0AA725C_22" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Register<span id="LSTC0AA725C_23" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>)</td></tr><tr><td><a href="M_Alteruna_AttributesSync_Serialize.htm">Serialize</a></td><td>
            Write changes to a <span class="code">ITransportStreamWriter</span> processor.
            <br />(Overrides <a href="M_Alteruna_CommunicationBridgeUID_Serialize.htm">CommunicationBridgeUID<span id="LSTC0AA725C_24" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Serialize(ITransportStreamWriter, Byte, Boolean)</a>)</td></tr><tr><td><a href="M_Alteruna_AttributesSync_UncommittedFields.htm">UncommittedFields</a></td><td>
            Check if there is any uncommitted changes to any fields.
            </td></tr><tr><td><a href="M_Alteruna_AttributesSync_Unserialize.htm">Unserialize</a></td><td>
            Read changes from a <span class="code">ITransportStreamReader</span> processor.
            <br />(Overrides <a href="M_Alteruna_CommunicationBridgeUID_Unserialize.htm">CommunicationBridgeUID<span id="LSTC0AA725C_25" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Unserialize(ITransportStreamReader, Byte, UInt32)</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Alteruna_AttributesSync_LocalMethodBehavior.htm">LocalMethodBehavior</a></td><td>
            Chose how local methods behave when sending.
            </td></tr><tr><td><a href="F_Alteruna_AttributesSync_Reliability.htm">Reliability</a></td><td>
            Chose how to send data. Reliable or Unreliable.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>