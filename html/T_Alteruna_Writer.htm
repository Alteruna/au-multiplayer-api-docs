<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Writer Class</title><meta name="Title" content="Writer" /><meta name="Help.Id" content="T:Alteruna.Writer" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="T_Alteruna_Writer" /><meta name="Description" content="Class Reader is used to read data recieved from another User." /><meta name="tocFile" content="../toc/IDAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Writer Class</h1><div class="summary">
            Class <span class="code">Reader</span> is used to read data recieved from another User.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna.htm">Alteruna</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.3.4+23572bbe79d00cde564b217419b1eba432b8e858<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">Writer</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">Writer</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDSEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_Writer_EndCompress.htm">EndCompress</a></td><td>
            Compresses the data already written to the writer.
            If StartCompress has not been called, the data will be compressed from the start of the writer.
            </td></tr><tr><td><a href="M_Alteruna_Writer_SerializeAndPackString__1.htm">SerializeAndPackString<span id="LST7C9D419E_0" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7C9D419E_1" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Pack an object into a string that cane later be unpacked using <a href="M_Alteruna_Reader_DeserializePackedString__1.htm">DeserializePackedString<span id="LST7C9D419E_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7C9D419E_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(String)</a>.
            </td></tr><tr><td><a href="M_Alteruna_Writer_StartCompress.htm">StartCompress</a></td><td>
            Sets the current position of the writer as the start of the data to be compressed.
            Default to the start of the Writer.
            </td></tr><tr><td><a href="M_Alteruna_Writer_Write.htm">Write(Boolean)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_1.htm">Write(Byte)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_2.htm">Write(<span id="LST7C9D419E_4" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST7C9D419E_5" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_4.htm">Write(Guid)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_5.htm">Write(Int16)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_6.htm">Write(Int32)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_7.htm">Write(Single)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_8.htm">Write(String)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_9.htm">Write(UInt16)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_10.htm">Write(UInt32)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_Write_3.htm">Write(<span id="LST7C9D419E_6" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST7C9D419E_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a></td><td> </td></tr><tr><td><a href="M_Alteruna_Writer_WriteGeneric__1.htm">WriteGeneric<span id="LST7C9D419E_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7C9D419E_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            identical to WriteObject
            </td></tr><tr><td><a href="M_Alteruna_Writer_WriteObject.htm">WriteObject(Object)</a></td><td><span class="tag is-danger">Obsolete.</span></td></tr><tr><td><a href="M_Alteruna_Writer_WriteObject_1.htm">WriteObject(Object, Type)</a></td><td>
            Write an object of given type.
            </td></tr><tr><td><a href="M_Alteruna_Writer_WriteObject__1.htm">WriteObject<span id="LST7C9D419E_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7C9D419E_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>(T)</a></td><td>
            Write an object of given type.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAEASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="M_Alteruna_UnityWriter_Write.htm">Write</a></td><td>
            Write a Bounds to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_1.htm">Write</a></td><td>
            Write a BoundsInt to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_2.htm">Write</a></td><td>
            Write a Color (RGBA) to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_3.htm">Write</a></td><td>
            Write a Color32 (RGBA) to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_4.htm">Write</a></td><td>
            Write a Plane to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_5.htm">Write</a></td><td>
            Write a Pose to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_6.htm">Write</a></td><td>
            Write a Quaternion to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_7.htm">Write</a></td><td>
            Write a Ray to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_8.htm">Write</a></td><td>
            Write a Ray2D to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_9.htm">Write</a></td><td>
            Write a Rect to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_10.htm">Write</a></td><td>
            Write a RectInt to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_11.htm">Write</a></td><td>
            Write a Vector2 to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_12.htm">Write</a></td><td>
            Write a Vector2Int to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_13.htm">Write</a></td><td>
            Write a Vector3 to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_14.htm">Write</a></td><td>
            Write a Vector3Int to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_UnityWriter_Write_15.htm">Write</a></td><td>
            Write a Vector4 to a Writer.
            <br />(Defined by <a href="T_Alteruna_UnityWriter.htm">UnityWriter</a>)</td></tr><tr><td><a href="M_Alteruna_Encryption_WriteEncrypted.htm">WriteEncrypted</a></td><td><br />(Defined by <a href="T_Alteruna_Encryption.htm">Encryption</a>)</td></tr><tr><td><a href="M_Alteruna_Encryption_WriteEncrypted__1.htm">WriteEncrypted<span id="LST7C9D419E_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>T<span id="LST7C9D419E_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td><br />(Defined by <a href="T_Alteruna_Encryption.htm">Encryption</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div><div><span class="noLink">ITransportStreamWriter</span></div><div><a href="T_Alteruna_Reader.htm">Reader</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>