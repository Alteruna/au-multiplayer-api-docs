<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>SyncedKey Class</title><meta name="Title" content="SyncedKey" /><meta name="Help.Id" content="T:Alteruna.SyncedKey" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="T_Alteruna_SyncedKey" /><meta name="Description" content="Alternative way of implementing InputSynchronizable." /><meta name="tocFile" content="../toc/IDAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Synced<wbr />Key Class</h1><div class="summary">
            Alternative way of implementing <span class="code">InputSynchronizable</span>.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna.htm">Alteruna</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.3.4+23572bbe79d00cde564b217419b1eba432b8e858<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">[<span class="identifier">SerializableAttribute</span>]
<span class="keyword">public</span> <span class="keyword">class</span> <span class="identifier">SyncedKey</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">SyncedKey</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDBCSection">
            Setup to sync the A key and listen to related event.
            You can also just as easy get the value directly from the <span class="code">SyncedKey.Value</span>.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using UnityEngine;
using UnityEngine.Events;
using Alteruna;

public class MyInputClass : MonoBehaviour
{
    // Reference to a InputSynchronizable.
    public InputSynchronizable Input;
    // Key field.
    private SyncedKey _myKey;

    void Awake()
    {
        // Setup key.
        _myKey = new SyncedKey(Input, KeyCode.A);

        // Listen to key event.
        _myKey.OnInputChanged.AddListener(KeyChange);
    }

    void KeyChange(SyncedKey key) {
        // This is the same value as _myKey.Value.
        Debug.Log(key.Value);
    }
}</code></pre></div></div><br />
            
            SyncedKeys can also be set up by the inspector. but to work, they still need to be registered.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using UnityEngine;
using Alteruna;

public class MyJumpClass : MonoBehaviour
{
    // Reference to a InputSynchronizable.
    public InputSynchronizable Input;
    // Jump input that we can setup in the inspector.
    public SyncedKey Jump;
    // Jump force.
    public float jumpForce = 10f;

    void Awake()
    {
        Jump.Register(Input);
    }

    private void Update()
    {
        if (Jump)
        {
            transform.Translate(0, Time.deltaTime * jumpForce, 0);
        }
    }
}</code></pre></div></div><img src="../images/Alteruna.SyncedKey.MyJumpClass.png" alt="Inspector setup of SyncedAxis" /></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDIEASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="P_Alteruna_SyncedKey_Key.htm">Key</a></td><td>
            Registered Keycode input.
            On set, reregister if already registered.
            </td></tr><tr><td><a href="P_Alteruna_SyncedKey_Value.htm">Value</a></td><td>
            Value of target input key.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDFEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_SyncedKey_Deregister.htm">Deregister</a></td><td>
            Deregister from <span class="code">IInput</span>.
            </td></tr><tr><td><a href="M_Alteruna_SyncedKey_Register.htm">Register<span id="LSTA5870EF7_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a></td><td>
            Register key to a previously set <span class="code">IInput</span>.
            </td></tr><tr><td><a href="M_Alteruna_SyncedKey_Register_1.htm">Register(IInput)</a></td><td>
            Register key to target <span class="code">IInput</span>.
            </td></tr><tr><td><a href="M_Alteruna_SyncedKey_Register_2.htm">Register(IInput, KeyCode)</a></td><td>
            Register key to target <span class="code">IInput</span>.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Operators</h2><div id="IDAGEASection"><table id="OperatorList" class="table is-hoverable"><tr><td><a href="M_Alteruna_SyncedKey_op_Implicit.htm"><span id="LSTA5870EF7_1" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(SyncedKey to Boolean)</a></td><td>
            Get value of key.
            </td></tr><tr><td><a href="M_Alteruna_SyncedKey_op_Implicit_1.htm"><span id="LSTA5870EF7_2" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(SyncedKey to Int32)</a></td><td>
            Get value of key.
            </td></tr><tr><td><a href="M_Alteruna_SyncedKey_op_Implicit_2.htm"><span id="LSTA5870EF7_3" data-languageSpecificText="cs=Implicit|vb=Widening|cpp=Implicit|nu=Implicit|fs=Implicit"></span>(SyncedKey to Single)</a></td><td>
            Get value of key.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Alteruna_SyncedKey_DoubleTapTime.htm">DoubleTapTime</a></td><td>
            Max time between taps for a valid double tap for the key mode doubleTap
            </td></tr><tr><td><a href="F_Alteruna_SyncedKey_InputManager.htm">InputManager</a></td><td>
            Connected <span class="code">IInput</span>.
            </td></tr><tr><td><a href="F_Alteruna_SyncedKey_KeyState.htm">KeyState</a></td><td>
            The raw value of target key unaffected by mode.
            </td></tr><tr><td><a href="F_Alteruna_SyncedKey_mode.htm">mode</a></td><td>
            key mode.
            </td></tr><tr><td><a href="F_Alteruna_SyncedKey_OnInputChanged.htm">OnInputChanged</a></td><td>
            Invokes when value get changed.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div><div><a href="T_Alteruna_InputSynchronizable.htm">InputSynchronizable</a></div><div><a href="T_Alteruna_SyncedAxis.htm">SyncedAxis</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Operators</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>