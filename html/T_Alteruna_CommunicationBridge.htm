<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>CommunicationBridge Class</title><meta name="Title" content="CommunicationBridge" /><meta name="Help.Id" content="T:Alteruna.CommunicationBridge" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna" /><meta name="guid" content="T_Alteruna_CommunicationBridge" /><meta name="Description" content="Holds references and methods for communications with active Multiplayer component. Unlike CommunicationBridgeUID, this component does not have a unique identifier (UID)." /><meta name="tocFile" content="../toc/IDAA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Communication<wbr />Bridge Class</h1><div class="summary">
            Holds references and methods for communications with active <span class="code">Multiplayer</span> component.
            Unlike <span class="code">CommunicationBridgeUID</span>, this component does not have a unique identifier (UID).
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna.htm">Alteruna</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.3.3<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="identifier">CommunicationBridge</span> : <span class="identifier">MonoBehaviour</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_self" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Component</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Behaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">MonoBehaviour</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">CommunicationBridge</span></dd></dl><dl class="inheritanceHierarchy"><dt>Derived</dt><dd><div><a href="T_Alteruna_Avatar.htm">Alteruna<span id="LSTB1D846ED_0" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Avatar</a></div><div><a href="T_Alteruna_CommunicationBridgeUID.htm">Alteruna<span id="LSTB1D846ED_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>CommunicationBridgeUID</a></div><div><a href="T_Alteruna_InputSynchronizable.htm">Alteruna<span id="LSTB1D846ED_2" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>InputSynchronizable</a></div><div><a href="T_Alteruna_Spawner.htm">Alteruna<span id="LSTB1D846ED_3" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>Spawner</a></div><div class="is-hidden hiddenDescendant"><a href="T_Alteruna_UniqueAvatarChild.htm">Alteruna<span id="LSTB1D846ED_4" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UniqueAvatarChild</a></div><div class="is-hidden hiddenDescendant"><a href="T_Alteruna_UniqueAvatarColor.htm">Alteruna<span id="LSTB1D846ED_5" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>UniqueAvatarColor</a></div><a class="descendantsToggle hiddenDescendant">More <span class="icon is-small"><i class="fa fa-chevron-down"></i></span></a><a class="descendantsToggle hiddenDescendant is-hidden">Less <span class="icon is-small"><i class="fa fa-chevron-up"></i></span></a></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDBCSection">
            The CommunicationBridge class can be used to get a Multiplayer reference and possession of avatars.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">public class MyCommunicationBridge : CommunicationBridge
{
    private bool _isPossessed = false;
    private bool _isPossessor = false;
    private Avatar _avatar;

    // The possessed event is called after awake and before start when the avatar is initialized.
    public override void Possessed(bool isMe, User user)
    {
        _isPossessed = true;

        // also known as is owner
        _isPossessor = isMe;

        // Inside CommunicationBridge, we can access the Multiplayer component through the Multiplayer property.
        // We can use it to get the avatar for a user.
        _avatar = Multiplayer.GetAvatar(user.Index);
    }

    // When the player is removed form the game or the avatar is repossessed, we can manage it using the Unpossessed method.
    public override void Unpossessed()
    {
        _isPossessed = false;
        _isPossessor = false;
        _avatar = null;
    }
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDBEASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="M_Alteruna_CommunicationBridge_OnEnable.htm">OnEnable</a></td><td>
            Collects <span class="code">Multiplayer</span> reference.
            </td></tr><tr><td><a href="M_Alteruna_CommunicationBridge_Possessed.htm">Possessed</a></td><td>
            Called when <span class="code">Avatar</span> is possessed by a user.
            </td></tr><tr><td><a href="M_Alteruna_CommunicationBridge_Reset.htm">Reset</a></td><td>
            We set the <span class="code">Multiplayer</span> reference when component is reset inorder to save performance in the spawn frame.
            </td></tr><tr><td><a href="M_Alteruna_CommunicationBridge_SetMultiplayerComponent.htm">SetMultiplayerComponent</a></td><td>
            If the <span class="code">Multiplayer</span> reference is null, set it to active <span class="code">Multiplayer</span> component.
            <h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDFIEEASection"><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">void OnEnable() =&gt; SetMultiplayerComponent();</code></pre></div></div><span class="code">SetMultiplayerComponent</span> call it in <span class="code">OnEnable</span> unless hidden.
            </div></td></tr><tr><td><a href="M_Alteruna_CommunicationBridge_Unpossessed.htm">Unpossessed</a></td><td>
            Called when <span class="code">Avatar</span> gets unpossessed.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Alteruna_CommunicationBridge_Multiplayer.htm">Multiplayer</a></td><td>
            Reference to Multiplayer controller component.
            sets in <span class="code">OnEnable</span> unless hidden.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna.htm">Alteruna Namespace</a></div><div><a href="T_Alteruna_CommunicationBridgeUID.htm">CommunicationBridgeUID</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();
$(".descendantsToggle").click(function () {
    $(".hiddenDescendant").toggleClass("is-hidden");
});

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>