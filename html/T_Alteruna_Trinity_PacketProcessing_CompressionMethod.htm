<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>CompressionMethod Class</title><meta name="Title" content="CompressionMethod" /><meta name="Help.Id" content="T:Alteruna.Trinity.PacketProcessing.CompressionMethod" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Alteruna.Trinity.PacketProcessing" /><meta name="guid" content="T_Alteruna_Trinity_PacketProcessing_CompressionMethod" /><meta name="Description" content="Compression types for data compression." /><meta name="tocFile" content="../toc/IDCFA.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div id="DocumentationTitle" class="level-item">Alteruna Multiplayer Docs</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="TopicContent" class="column content is-7"><h1>Compression<wbr />Method Class</h1><div class="summary">
            Compression types for data compression.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="N_Alteruna_Trinity_PacketProcessing.htm">Alteruna.Trinity.PacketProcessing</a><br /><strong>Assembly:</strong> Alteruna.Trinity (in Alteruna.Trinity.dll) Version: 1.3.4<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">CompressionMethod</span> : <span class="identifier">Enum</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><span class="noLink">Object</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">ValueType</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="noLink">Enum</span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">CompressionMethod</span></dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDBCSection">
            Here is an example of how to use compression in a <span class="code">Synchronizable</span>.
            <div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using Alteruna;
using UnityEngine;
public class SyncCompressed : Synchronizable
{
    public string SData = "Hello, World!";
    private string _oldSData;

    public byte[] Data = new byte[512];
    private byte[] _oldData;

    // Set the old data to the current data so that only new data is sent.
    private void Start()
    {
        _oldData = Data;
        _oldSData = SData;
    }

    // Check if the data has changed, and if so, commit it.
    private void Update()
    {
        if (Data != _oldData)
        {
            _oldData = Data;
            Commit();
        }
        else if (SData != _oldSData)
        {
            _oldSData = SData;
            Commit();
        }

        SyncUpdate();
    }

    // This is called when the data is being sent to the server.
    public override void AssembleData(Writer writer, byte LOD)
    {
        // Mark the start of the compressed data
        writer.StartCompress();

        // Write the data
        writer.Write(SData);
        writer.Write(Data);

        // Compress the data
        var data = writer.EndCompress(CompressionMethod.NibbleZeroIndicator);

        Debug.Log("We saved " + data + " bytes by compressing the data!");
    }

    // This is called when the data is being received from the server.
    public override void DisassembleData(Reader reader, byte LOD)
    {
        // Decompress the data.
        reader.Decompress(CompressionMethod.NibbleZeroIndicator);

        // Read the string data.
        SData = reader.ReadString();
        _oldSData = SData;

        // Read the byte array data.
        Data = reader.ReadByteArray();
        _oldData = Data;
    }
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Fields</h2><div id="IDAEASection"><table id="FieldList" class="table is-hoverable"><tr><td><a href="F_Alteruna_Trinity_PacketProcessing_CompressionMethod_Base64.htm">Base64</a></td><td>
            Base64 encoding.
            </td></tr><tr><td><a href="F_Alteruna_Trinity_PacketProcessing_CompressionMethod_GZip.htm">GZip</a></td><td>
            Zip compression.
            Less effective on small amounts of data.
            </td></tr><tr><td><a href="F_Alteruna_Trinity_PacketProcessing_CompressionMethod_NibbleZeroIndicator.htm">NibbleZeroIndicator</a></td><td>
            Nibble Zero Indicator (NZI) compression.
            Inefficient for compressing data similar to ASCII and UTF8 strings.
            Works as well on small amounts of data as it does on large amounts of data.
            </td></tr><tr><td><a href="F_Alteruna_Trinity_PacketProcessing_CompressionMethod_None.htm">None</a></td><td>
            No compression.
            </td></tr><tr><td><a href="F_Alteruna_Trinity_PacketProcessing_CompressionMethod_RunLengthEncoding.htm">RunLengthEncoding</a></td><td>
            Run-Length Encoding (RLE) compression.
            Effective form compressing data with many repeating bytes.
            </td></tr><tr><td><a href="F_Alteruna_Trinity_PacketProcessing_CompressionMethod_value__.htm">value__</a></td><td> </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="N_Alteruna_Trinity_PacketProcessing.htm">Alteruna.Trinity.PacketProcessing Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Fields</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div><footer id="PageFooter" class="footer border-top py-3 fixedFooter"><div class="columns"><div class="column"><p>Copyright © 2024 Alteruna AB</p> 
				</div><div class="column"> 
				</div></div></footer></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>